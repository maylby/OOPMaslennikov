/*
Объектно-ориентированное программирование (семинары)
Урок 2. Принципы ООП Абстракция и интерфейсы. 

Пример проектирования
https://gb.ru/lessons/414497


Как эффективно заниматься в асинхронном формате?

� Не забывайте смотреть лекцию перед тем, как перейти к семинару;
� Во время выполнения заданий ставьте видео на паузу и пробуйте выполнить его самостоятельно;
� После самостоятельного выполнения задания, обязательно посмотрите как преподаватель выполняет
его и анализируйте свои действия;
� Обязательно выполняйте домашнее задание после семинара;
� Регулярно освежайте материал в памяти с помощью конспектов к лекциям, видеолекций и других
удобных вам материалов


Что будет на уроке сегодня

� Повторим теорию базовых определений ООП - абстракция, наследование
� Получим практические навыки в построении абстрактных сущностей и интерфейсов
� Научимся правильно использовать абстрактные классы и интерфейсы


_________________________________

			    Абстрактный класс
			          /
---------------------/----------
	    Обязан реализовывать все 
	    абстрактные методы
-----------------/--------------
		        /
Обычный класс наследник
_________________________________


____________________________________________________________________________________

				                Абстрактный класс
_________________________________/_____________\___________________________________
			                	/	     |	    \
	         Модификатор ’abstract’      |	Не может быть неизменяемым
----------------------------/------------|----------\--------------------------------
			               /    		 |	         \
Может содержать абстрактные методы   	 |	Не можем создать объект этого класса
      (методы без реализации)	    	 |
_________________________________________|__________________________________________



00:13:30
________________________________________________________________________________________

				                      Интерфейс
_____________________________________/_________\________________________________________
				                    /	  |	    \					
	        Ключевое слово ’interface’    |	    Все переменные и методы ’public’ 	
-------------------------------/----------|--------\------------------------------------
				              /        	  |	        \					
Может содержать методы без реализации	  |	    Не можем создать объект этого интерфейса
		(абстрактные методы)	          |	            \
-----------------------/------------------|--------------\------------------------------
			          /            		  |		          \				
Разрешено множественное наследование 	  |	    Не может наследоваться от класса
(имплементация любого числа интерфейсов)  |		            |	
--------------------|---------------------|-----------------|----------------------------
		            |              		  |		            |
Не может содержать конструкторы      	  |	    Все переменные статичны и неизменны
__________________________________________|_____________________________________________



00:16:15

Отличия интерфейса от абстрактнного класса
(абстрактный класс - предшественник интерфейса)

_______________________________________________________________

			             Абстрактный класс
___________________________/_________\_________________________
			              / 	|     \
 Может содержать абстрактные 	|	Может содержать
 и не абстрактные методы    	|	изменяемые переменные
-------------------/------------|----------\-------------------
	              /   			|		    \
        Может содержать  		|	Простые классы наследуются
    не статичные переменные	    |	от него через "extends"
--------------------------------|------------------------------
			                	|
		            Может наследовать свойства 
		            одного абстрактного класса
--------------------------------|------------------------------
                                |
	        Может реализовывать несколько интерфейсов
		        без обязательной реализации методов
_______________________________________________________________



____________________________________________________________

			            Интерфейс
________________________/_______\___________________________
			           /	|    \
   Может содержать, только 	|	Может содержать, только
   методы без реализации	|	неизменяемые переменные
--------------/-------------|--------------\----------------
	         /	    		|	        	\
   Может содержать, только	|	Простые классы реализуют
   статичные переменные		|	интерфейс через "implements"
----------------------------|-------------------------------
				            |
		        Не может наследовать свойства 
		    	    абстрактного класса
----------------------------|-------------------------------
                            |
		          Может наследовать свойства 
			        нескольких интерфейсов
____________________________________________________________


00:18:00

Роман Сухачев

Использование абстрвктных классов рекомендуется тогда, когда
нужна базовая реализация и методы с реализации (?).

Использование интерфейсов больше подходит, когда нужно, чтобы 
некоторые классы могли предоставить свою реализацию 
для набора методов, без обязательств наследовать от одного класса.

Наследование от класса накладывает ограничения на класс (?), т.к.
нет возможности наследоваться от другого класса, в то время, как
интерфейсов можно наследовать неограниченное количество.



00:25:50

*/

package OOP.Seminar.Sem02;

public class Info {
    
}
