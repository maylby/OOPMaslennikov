/*
Объектно-ориентированное программирование (лекции)
Урок 1. Введение в ООП. Свои типы и концепты

https://gb.ru/lessons/414489


Введение в ООП.
Концепты и свои типы

План

1. Введение
2. Класс и объект: детали
3. Наполнение
4. Концепты ООП
5. Примеры использования
6. Итоги


00:03:00

1. Введение

Способ управления сложными системами: 
«Разделяй и властвуй».

Это значит, что программную систему нужно 
разбить на подсистемы так, чтобы работу каждой 
из них можно было рассматривать и совершенствовать 
независимо от других.


00:04:10

Тезисы ООП

Правильное план – реализация только после абстракций
Абстракция – что делает?
Поведение – как делает?
Спецификация – набор правил, описывающих API


00:10:00

Класс

Класс – это «чертеж» (описание) сущности предметной области, 
позволяющий выделить некоторые общие характеристики, 
состояние и поведение, зависящее от состояния.


Экземпляр класса

Экземпляр класса – отдельный представитель класса, 
имеющий КОНКРЕТНОЕ состояние и поведение, 
которое полностью определяется описанием класса.

Состояние – набор данных (полей, атрибутов, членов класса).
Поведение – функции для работы с данными и выполнения полезной работы.


00:11:30 

Экземпляр класса

Состояние:
	● Поля
	● Константы
	● События

Поведение:
	● Конструкторы
	● Методы



00:12:00

ООП – объектно-ориентированное программирование.

Парадигма (стиль, шаблон) разработки ПО, 
основными понятиями которой являются классы и объекты.
Говорят, что разработка в стиле ООП ведется с использованием классов объектов, 
которые обладают состоянием и поведением, зависящим от этого состояния.
*/

package OOP.Lesson.Les01;
public class Ex000 {
}

/* 
00:12:30

Lesson_07.Ex001;
 */
class PointMethod {
    static double distance(int x1, int y1, int x2, int y2) {
        return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
    }
    public static void main(String[] args) {

        int ax = 0;
        int ay = 0;
        int bx = 0;
        int by = 1;
        System.out.println(distance(ax, ay, bx, by));
        // Создать точку 
        // Печать точки
    }
}

/*
00:13:45

Выделение сущности "точка"

package Lesson_07.Ex002;

* Код класса (храниться в отдельном файле)
* связан с клиенским кодом (см. ниже)
*/
